name: Deploy to Server

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: 'Environment to deploy to (production or test)'
      image-tag:
        required: true
        type: string
        description: 'Docker image tag to deploy'
      server-path:
        required: true
        type: string
        description: 'Path on server (prod or test)'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Deploy to ${{ inputs.environment }}
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "ðŸš€ Deploying to ${{ inputs.environment }} environment..."
            
            # Navigate to the correct directory
            cd /home/ubuntu/${{ inputs.server-path }}
            
            # Authenticate to GitHub Container Registry
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            # Stop existing containers
            sudo docker-compose -f docker-compose.prod.yml down || true
            
            # Update the image tag in docker-compose file
            sed -i 's|ghcr.io/maodehka/devops:.*|ghcr.io/maodehka/devops:${{ inputs.image-tag }}|g' docker-compose.prod.yml
            
            # Pull the new image
            sudo docker-compose -f docker-compose.prod.yml pull
            
            # Start the new containers
            sudo docker-compose -f docker-compose.prod.yml up -d
            
            # Clean up old images
            sudo docker system prune -f
            
            # Verify deployment
            echo "âœ… Checking deployment status..."
            sudo docker-compose -f docker-compose.prod.yml ps
            
            echo "ðŸŽ‰ Deployment to ${{ inputs.environment }} completed successfully!"